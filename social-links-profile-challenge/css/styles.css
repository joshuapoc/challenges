/*font importation*/
@font-face {
    font-family: "Inter-Regular";
    src: url(../assets/fonts/static/Inter-Regular.ttf);
}
/*variables declaration*/
:root{
    --font-inter: Inter-Regular;
    --weight-400: 400;
    --weight-600: 600;
    --weight-700: 700;
    --white: hsl(0, 0%, 100%);
    --grey: hsl(0, 0%, 20%);
    --dark-grey: hsl(0, 0%, 12%);
    --off-black: hsl(0, 0%, 8%);
    --green: hsl(75, 94%, 57%);
}
/*Resets*/
*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    color: inherit;
}
a, address{
    font-style: normal;
    text-decoration: none;
}
li{
    background: none;
    border: none;
    text-align: center;
    font-size: 1rem;
    list-style: none;
}
img{
    display: block;
    max-width: 100px;
    border-radius: 50%;
}
/*layout*/
body{
    min-height: 100vh;
    background-color: var(--off-black);
    color: var(--white);
    font-family: var(--font-inter);
    text-align: center;
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: auto 1fr;
}
header, .sn-container, .sn-links{
    display: flex;
    flex-direction: column;
}
header{
    grid-area: 1/1/2/2;
}
main{
    grid-area: 2/1/3/2;
    display: flex;
    align-items: center;
    justify-content: center;
}
.sn-container, .attr-container{
    background-color: var(--dark-grey);
}
.attr-container{
    align-self: start;
    margin: 1em;
    padding: .5em .7em .5em .7em;
    border-radius: .5em;
}
.sn-container{
    align-items: center;
    width: 100%;
    max-width: 340px;
    border-radius: 1em;
    margin: 2em;
    padding: 2.4em 1.8em 1.5em 1.8em;
}
.sn-container :is(img, address){
    margin-bottom: 20px;
}
.sn-container p{
    margin-bottom: 1.3em;
    font-size: .9rem;
    font-weight: var(--weight-400);
}
.sn-container h1{
    margin-bottom: .3em;
    font-weight: var(--weight-600);
    font-size: 1.7rem;
}
.sn-container address{
    color: var(--green);
    font-weight: var(--weight-600);
}
.sn-links{
    width: 100%;
    gap: .8em;
}
.sn-links li{
    background-color: var(--grey);
    padding: .5em 0;
    border-radius: .4em;
    font-weight: var(--weight-700);
    transition: color .3s ease, font-size .3s ease;    
}
.sn-links li:hover{
    background-color: var(--green);
    font-size: 1.2rem;
    color: var(--dark-grey);
    cursor: pointer;
}
.attr-container{
    transition: background-color .3s ease;
}
.attr-container p{
    transition: color .3s ease;
}
.attr-container a{
    text-decoration: transparent;
    transition: font-size .3s ease, font-weight .3s ease, text-decoration-color .3s ease;
    /*
    transitions start from point "A" to point "B"
    A: Text-decoration: transparent. Its default value is "none" (NULL) so transitions wont work
    B: In the pseudo selector (hover) text-decoration will be underline
    */
}
.attr-container a:hover{
    color: var(--dark-grey);
    font-weight: var(--weight-700);
    font-size: 1.1rem;
    text-decoration: underline;
    /*
    transitions start from point "A" to point "B"
    A: Transitions must be set on the element before the pseudo selectors (hover in this case).
    B: After pseudo selectors, the new properties must be set for the transitions to work
    */
}
@media only screen and (max-width: 935px) {
    .attr-container{
        align-self: center;
    }
}
